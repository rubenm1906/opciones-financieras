name: Ejecutar Script de Opciones

on:
  schedule:
    - cron: '0 13 * * *'  # Ejecuta todos los días a las 13:00 UTC
  workflow_dispatch:  # Permite ejecución manual
    inputs:
      tickers:
        description: 'Tickers a analizar (separados por comas, ej: AAPL,MSFT,GOOGL)'
        required: false
        default: 'AAPL,MSFT,GOOGL,EPAM,TEP.PA'
      min_rentabilidad_anual:
        description: 'Mínima rentabilidad anual (%)'
        required: false
        default: '40'
      max_dias_vencimiento:
        description: 'Máximo días al vencimiento'
        required: false
        default: '60'
      min_diferencia_porcentual:
        description: 'Mínima diferencia porcentual (%)'
        required: false
        default: '5'
      min_volumen:
        description: 'Mínimo volumen'
        required: false
        default: '1'
      min_volatilidad_implicita:
        description: 'Mínima volatilidad implícita (%)'
        required: false
        default: '30'
      max_volatilidad_implicita:
        description: 'Máxima volatilidad implícita (%)'
        required: false
        default: '50'
      min_open_interest:
        description: 'Mínimo interés abierto'
        required: false
        default: '1'
      filtro_tipo_opcion:
        description: 'Filtro tipo opción (OTM, ITM, TODAS)'
        required: false
        default: 'OTM'
      top_contratos:
        description: 'Número de contratos a mostrar en "Mejores Contratos"'
        required: false
        default: '10'

jobs:
  analizar-opciones:
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      # Configurar Python
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Instalar dependencias
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install yfinance pandas tabulate requests

      # Ejecutar el script con las configuraciones proporcionadas
      - name: Ejecutar script de análisis de opciones
        env:
          TICKERS: ${{ github.event.inputs.tickers }}
          MIN_RENTABILIDAD_ANUAL: ${{ github.event.inputs.min_rentabilidad_anual }}
          MAX_DIAS_VENCIMIENTO: ${{ github.event.inputs.max_dias_vencimiento }}
          MIN_DIFERENCIA_PORCENTUAL: ${{ github.event.inputs.min_diferencia_porcentual }}
          MIN_VOLUMEN: ${{ github.event.inputs.min_volumen }}
          MIN_VOLATILIDAD_IMPLÍCITA: ${{ github.event.inputs.min_volatilidad_implicita }}
          MAX_VOLATILIDAD_IMPLÍCITA: ${{ github.event.inputs.max_volatilidad_implicita }}
          MIN_OPEN_INTEREST: ${{ github.event.inputs.min_open_interest }}
          FILTRO_TIPO_OPCION: ${{ github.event.inputs.filtro_tipo_opcion }}
          TOP_CONTRATOS: ${{ github.event.inputs.top_contratos }}
          ALERTA_RENTABILIDAD_ANUAL: 50  # Valor por defecto hardcodeado
          ALERTA_MAX_VOLATILIDAD: 30     # Valor por defecto hardcodeado
        run: |
          python analizar_opciones.py

      # Subir los resultados como artifact
      - name: Subir resultados como artifact
        uses: actions/upload-artifact@v4
        with:
          name: resultados-opciones
          path: |
            resultados.txt
            todas_las_opciones.csv
            mejores_contratos.csv
