name: Ejecutar Script de Opciones

on:
  schedule:
    - cron: '0 8,12,16,20 * * *'  # Ejecuta a las 9:00, 13:00, 17:00, 21:00 CET (UTC+1)
  workflow_dispatch:  # Permite ejecución manual
    inputs:
      tickers:
        description: 'Tickers a analizar (separados por comas, ej: NA9.DE,TEP.PA,GOOGL)'
        required: false
        default: 'NA9.DE,TEP.PA,GOOGL,EPAM,NFE,GLNG,GLOB,NVDA'
      min_rentabilidad_anual:
        description: 'Mínima rentabilidad anual (%)'
        required: false
        default: '45'
      max_dias_vencimiento:
        description: 'Máximo días al vencimiento'
        required: false
        default: '45'
      min_diferencia_porcentual:
        description: 'Mínima diferencia porcentual (%)'
        required: false
        default: '5'
      min_volatilidad_implicita:
        description: 'Mínima volatilidad implícita (%)'
        required: false
        default: '35'
      filtro_tipo_opcion:
        description: 'Filtro tipo opción (OTM, ITM, TODAS)'
        required: false
        default: 'OTM'
      top_contratos:
        description: 'Número de contratos a mostrar en "Mejores Contratos"'
        required: false
        default: '10'

jobs:
  analizar-opciones:
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      # Configurar Python
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Instalar dependencias
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install yfinance pandas tabulate requests

      # Ejecutar el script con las configuraciones proporcionadas
      - name: Ejecutar script de análisis de opciones
        env:
          TICKERS: ${{ github.event.inputs.tickers || 'NA9.DE,TEP.PA,GOOGL,EPAM,NFE,GLNG,GLOB,NVDA' }}
          MIN_RENTABILIDAD_ANUAL: ${{ github.event.inputs.min_rentabilidad_anual || '45' }}
          MAX_DIAS_VENCIMIENTO: ${{ github.event.inputs.max_dias_vencimiento || '45' }}
          MIN_DIFERENCIA_PORCENTUAL: ${{ github.event.inputs.min_diferencia_porcentual || '5' }}
          MIN_VOLATILIDAD_IMPLÍCITA: ${{ github.event.inputs.min_volatilidad_implicita || '35' }}
          FILTRO_TIPO_OPCION: ${{ github.event.inputs.filtro_tipo_opcion || 'OTM' }}
          TOP_CONTRATOS: ${{ github.event.inputs.top_contratos || '10' }}
        run: |
          echo "TICKERS=$TICKERS"
          echo "MIN_RENTABILIDAD_ANUAL=$MIN_RENTABILIDAD_ANUAL"
          echo "MAX_DIAS_VENCIMIENTO=$MAX_DIAS_VENCIMIENTO"
          echo "MIN_DIFERENCIA_PORCENTUAL=$MIN_DIFERENCIA_PORCENTUAL"
          echo "MIN_VOLATILIDAD_IMPLÍCITA=$MIN_VOLATILIDAD_IMPLÍCITA"
          echo "FILTRO_TIPO_OPCION=$FILTRO_TIPO_OPCION"
          echo "TOP_CONTRATOS=$TOP_CONTRATOS"
          python analizar_opciones.py

      # Subir los resultados como artifact
      - name: Subir resultados como artifact
        uses: actions/upload-artifact@v4
        with:
          name: resultados-opciones
          path: |
            resultados.txt
            todas_las_opciones.csv
            mejores_contratos.csv
