name: Analizar Opciones

on:
  schedule:
    - cron: '0 13 * * *'  # Ejecuta diariamente a las 13:00 UTC
  workflow_dispatch:
    inputs:
      TICKERS:
        description: 'Lista de tickers a analizar (separados por comas)'
        required: false
        default: 'NA9.DE,TEP.PA,GOOGL,EPAM,NFE,GLNG,GLOB,NVDA'
      MIN_RENTABILIDAD_ANUAL:
        description: 'Mínima rentabilidad anual (%)'
        required: false
        default: '45.0'
      MAX_DIAS_VENCIMIENTO:
        description: 'Máximo días al vencimiento'
        required: false
        default: '45'
      MIN_DIFERENCIA_PORCENTUAL:
        description: 'Mínima diferencia porcentual (%)'
        required: false
        default: '5.0'
      MIN_VOLATILIDAD_IMPLÍCITA:
        description: 'Mínima volatilidad implícita (%)'
        required: false
        default: '35.0'
      FILTRO_TIPO_OPCION:
        description: 'Tipo de opción (OTM, ITM, TODAS)'
        required: false
        default: 'OTM'
      TOP_CONTRATOS:
        description: 'Número máximo de contratos por ticker'
        required: false
        default: '5'
      FORCE_DISCORD_NOTIFICATION:
        description: 'Forzar notificación a Discord (true/false)'
        required: false
        default: 'false'
      MIN_BID:  # Nuevo campo
        description: 'Mínimo bid para los contratos ($)'
        required: false
        default: '0.99'

jobs:
  analizar-opciones:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install yfinance pandas tabulate requests

      - name: Ejecutar script de análisis de opciones
        env:
          TICKERS: ${{ github.event.inputs.TICKERS }}
          MIN_RENTABILIDAD_ANUAL: ${{ github.event.inputs.MIN_RENTABILIDAD_ANUAL }}
          MAX_DIAS_VENCIMIENTO: ${{ github.event.inputs.MAX_DIAS_VENCIMIENTO }}
          MIN_DIFERENCIA_PORCENTUAL: ${{ github.event.inputs.MIN_DIFERENCIA_PORCENTUAL }}
          MIN_VOLATILIDAD_IMPLÍCITA: ${{ github.event.inputs.MIN_VOLATILIDAD_IMPLÍCITA }}
          FILTRO_TIPO_OPCION: ${{ github.event.inputs.FILTRO_TIPO_OPCION }}
          TOP_CONTRATOS: ${{ github.event.inputs.TOP_CONTRATOS }}
          FORCE_DISCORD_NOTIFICATION: ${{ github.event.inputs.FORCE_DISCORD_NOTIFICATION }}
          MIN_BID: ${{ github.event.inputs.MIN_BID }}  # Nueva variable de entorno
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          python analizar_opciones.py

      - name: Subir resultados como artefactos
        uses: actions/upload-artifact@v4
        with:
          name: resultados
          path: |
            resultados.txt
            todas_las_opciones.csv
            Mejores_Contratos.txt
            mejores_contratos.csv
